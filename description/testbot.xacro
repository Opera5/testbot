<?xml version="1.0"?>
<robot name="four_wheel_bot" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Define material colors -->
  <material name="blue">
    <color rgba="0 0 0.8 1"/>
  </material>
  <material name="red">
    <color rgba="0.8 0 0 1"/>
  </material>
  <material name="green">
    <color rgba="0 0.8 0 1"/>
  </material>
  <material name="gray">
    <color rgba="0.5 0.5 0.5 1"/>
  </material>
  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>

  <!-- Define robot parameters -->
  <xacro:property name="base_length" value="0.4"/> <!-- Chassis length -->
  <xacro:property name="base_width" value="0.3"/> <!-- Chassis width -->
  <xacro:property name="base_height" value="0.15"/> <!-- Chassis height -->
  <xacro:property name="wheel_radius" value="0.05"/> <!-- Wheel radius -->
  <xacro:property name="wheel_width" value="0.02"/> <!-- Wheel width -->
  <xacro:property name="wheel_gap" value="0.01"/> <!-- Gap between wheels and chassis -->
  <xacro:property name="lidar_radius" value="0.05"/> <!-- LIDAR radius -->
  <xacro:property name="lidar_height" value="0.06"/> <!-- LIDAR height, reduced from 0.1m -->
  <xacro:property name="lidar_holder_height" value="0.06"/> <!-- LIDAR holder height -->
  <xacro:property name="camera_width" value="0.05"/> <!-- Camera width -->
  <xacro:property name="camera_height" value="0.03"/> <!-- Camera height -->
  <xacro:property name="camera_depth" value="0.04"/> <!-- Camera depth -->
  <xacro:property name="camera_holder_height" value="0.015"/> <!-- Camera holder height, matches base_height + 0.03 -->

  <!-- Base Footprint Link -->
  <link name="base_footprint">
  </link>

  <!-- Base Link (Chassis) -->
  <link name="base_link">
    <visual>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <material name="blue"/>
      <origin xyz="0 0 ${base_height/2}" rpy="0 0 0"/>
    </visual>
    <collision>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <origin xyz="0 0 ${base_height/2}" rpy="0 0 0"/>
    </collision>
    <inertial>
      <origin xyz="0 0 0.11" rpy="0 0 0"/>
      <mass value="3.5"/>
      <inertia ixx="0.0328" ixy="0.0"  ixz="0.0" iyy="0.0532" iyz="0.0" izz="0.0729"/>
    </inertial>
  </link>

  <!-- Joint between base_footprint and base_link -->
  <joint name="base_footprint_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin xyz="0 0 ${wheel_radius}" rpy="0 0 0"/>
  </joint>

  <!-- Wheel Macro -->
  <xacro:macro name="wheel" params="name side x_offset y_offset">
  <link name="${name}_wheel">
    <visual>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
      <material name="black"/>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
    </collision>
    <inertial>
      <mass value="0.053"/>
      <inertia ixx="0.00003489" ixy="0" ixz="0" iyy="0.00003489" iyz="0" izz="0.00006625"/>
    </inertial>
  </link>
  <joint name="${name}_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="${name}_wheel"/>
    <origin xyz="${x_offset} ${y_offset * (base_width/2 + wheel_gap)} 0" rpy="0 0 0"/>
    <limit effort="0.5" velocity="30.0" />
    <dynamics damping="0.05" friction="0.01" />
    <axis xyz="0 1 0"/>
  </joint>
</xacro:macro>

  <!-- Instantiate Wheels -->
  <xacro:wheel name="fl" side="left" x_offset="${base_length/4}" y_offset="1"/>
  <xacro:wheel name="fr" side="right" x_offset="${base_length/4}" y_offset="-1"/>
  <xacro:wheel name="rl" side="left" x_offset="-${base_length/4}" y_offset="1"/>
  <xacro:wheel name="rr" side="right" x_offset="-${base_length/4}" y_offset="-1"/>

  
  <!--LIDAR Holder-->
  <link name="lidar_holder">
    <visual>
      <geometry>
        <cylinder radius="0.02" length="${lidar_holder_height}"/>
      </geometry>
      <material name="gray"/>
      <origin xyz="0 0 ${lidar_holder_height/2}" rpy="0 0 0"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="0.02" length="${lidar_holder_height}"/>
      </geometry>
      <origin xyz="0 0 ${lidar_holder_height/2}" rpy="0 0 0"/>
    </collision>
    <inertial>
      <mass value="0.2"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="lidar_holder_joint" type="fixed">
    <parent link="base_link"/>
    <child link="lidar_holder"/>
    <origin xyz="0 0 ${base_height}" rpy="0 0 0"/>
  </joint>

  <!-- LIDAR -->
  <link name="lidar_link">
    <visual>
      <geometry>
        <cylinder radius="${lidar_radius}" length="${lidar_height}"/>
      </geometry>
      <material name="red"/>
      <origin xyz="0 0 ${lidar_height/2}" rpy="0 0 0"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="${lidar_radius}" length="${lidar_height}"/>
      </geometry>
      <origin xyz="0 0 ${lidar_height/2}" rpy="0 0 0"/>
    </collision>
    <inertial>
      <mass value="0.3"/>
      <inertia ixx="0.0002775" ixy="0.0" ixz="0.0" iyy="0.0002775" iyz="0.0" izz="0.000375"/>/>
    </inertial>
  </link>
  <joint name="lidar_joint" type="fixed">
    <parent link="lidar_holder"/>
    <child link="lidar_link"/>
    <origin xyz="0 0 ${lidar_holder_height}" rpy="0 0 0"/>
  </joint>

  <!-- Camera Holder -->
  <link name="camera_holder">
    <visual>
      <geometry>
        <cylinder radius="0.02" length="${camera_holder_height}"/>
      </geometry>
      <material name="gray"/>
      <origin xyz="0 0 ${camera_holder_height/2}" rpy="0 0 0"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="0.02" length="${camera_holder_height}"/>
      </geometry>
      <origin xyz="0 0 ${camera_holder_height/2}" rpy="0 0 0"/>
    </collision>
    <inertial>
      <mass value="0.2"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="camera_holder_joint" type="fixed">
    <parent link="base_link"/>
    <child link="camera_holder"/>
    <origin xyz="${base_length/2 - 0.05} 0 ${base_height}" rpy="0 0 0"/>
  </joint>

  <!-- Camera Frame -->
  <link name="camera_frame">
    <visual>
      <geometry>
        <box size="0.06 0.06 0.02"/>
      </geometry>
      <material name="gray"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.06 0.06 0.02"/>
      </geometry>
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.0005" ixy="0" ixz="0" iyy="0.0005" iyz="0" izz="0.0005"/>
    </inertial>
  </link>
  <joint name="camera_frame_joint" type="fixed">
    <parent link="camera_holder"/>
    <child link="camera_frame"/>
    <origin xyz="0 0 ${camera_holder_height}" rpy="0 0 0"/>
  </joint>

  <!-- Camera -->
  <link name="camera_link">
    <visual>
      <geometry>
        <box size="${camera_depth} ${camera_width} ${camera_height}"/>
      </geometry>
      <material name="green"/>
      <origin xyz="${camera_depth/2} 0 0" rpy="0 0 0"/>
    </visual>
    <collision>
      <geometry>
        <box size="${camera_depth} ${camera_width} ${camera_height}"/>
      </geometry>
      <origin xyz="${camera_depth/2} 0 0" rpy="0 0 0"/>
    </collision>
    <inertial>
      <mass value="0.2"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="camera_joint" type="fixed">
    <parent link="camera_frame"/>
    <child link="camera_link"/>
    <origin xyz="0.03 0 0" rpy="0 0 0"/>
  </joint>

  <!-- IMU -->
  <link name="imu_link">
    <visual>
      <geometry>
        <box size="0.04 0.04 0.02"/>
      </geometry>
      <material name="black"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.04 0.04 0.02"/>
      </geometry>
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.0005" ixy="0" ixz="0" iyy="0.0005" iyz="0" izz="0.0005"/>
    </inertial>
  </link>
  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin xyz="0 0 ${base_height + 0.02}" rpy="0 0 0"/>
  </joint>

  <!-- Gazebo Plugins -->
 <!--Control ad gazebo control interface-->
   <ros2_control name="IgnitionSystem" type="system">
  <hardware>
    <plugin>gz_ros2_control/GazeboSimSystem</plugin>
  </hardware>
  <joint name="fl_wheel_joint">
    <command_interface name="velocity">
      <param name="min">-20</param> <!-- 1.0 m/s / 0.05 m = 20 rad/s -->
      <param name="max">20</param>
    </command_interface>
    <state_interface name="position"/>
    <state_interface name="velocity"/>
  </joint>
  <joint name="rr_wheel_joint">
    <command_interface name="velocity">
      <param name="min">-20</param>
      <param name="max">20</param>
    </command_interface>
    <state_interface name="position"/>
    <state_interface name="velocity"/>
  </joint>
  <joint name="fr_wheel_joint">
    <command_interface name="velocity">
      <param name="min">-20</param>
      <param name="max">20</param>
    </command_interface>
    <state_interface name="position"/>
    <state_interface name="velocity"/>
  </joint>
  <joint name="rl_wheel_joint">
    <command_interface name="velocity">
      <param name="min">-20</param>
      <param name="max">20</param>
    </command_interface>
    <state_interface name="position"/>
    <state_interface name="velocity"/>
  </joint>
</ros2_control>


  <gazebo>
    <plugin filename="gz_ros2_control-system" name="gz_ros2_control::GazeboSimROS2ControlPlugin">
      <parameters>$(find testbot)/config/4w_diff_drive_controller_velocity.yaml</parameters>
    </plugin>
  </gazebo>

 <gazebo reference='lidar_joint'>
    <preserveFixedJoint>true</preserveFixedJoint>
  </gazebo>

<gazebo reference="lidar_link">
  <sensor name="lidar" type="gpu_lidar">
    <ignition_frame_id>lidar_link</ignition_frame_id>
    <topic>/scan</topic>
    <always_on>true</always_on>
    <visualize>true</visualize>
    <update_rate>10</update_rate>
    <ray>
      <scan>
        <horizontal>
          <samples>360</samples>
          <resolution>1.0</resolution>
          <min_angle>-3.14</min_angle>
          <max_angle>3.14</max_angle>
        </horizontal>
      </scan>
      <range>
        <min>0.03</min>
        <max>10.0</max>
        <resolution>0.015</resolution>
      </range>
      <noise>
        <type>gaussian</type>
        <mean>0.0</mean>
        <stddev>0.01</stddev>
      </noise>
    </ray>
    </sensor>
  </gazebo>

  <!-- Camera Sensor Plugin -->
  <gazebo reference="camera_link">
    <sensor name="camera" type="camera">
      <camera>
        <horizontal_fov>1.047</horizontal_fov>
        <image>
          <width>320</width>
          <height>240</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>20</far>
        </clip>

        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>

        <optical_frame_id>camera_frame</optical_frame_id>
        <camera_info_topic>camera_info</camera_info_topic>   
      </camera>
      <always_on>1</always_on>
      <update_rate>10</update_rate>
      <visualize>true</visualize>
      <topic>/robot_cam</topic>
      <enable_metrics>true</enable_metrics>
    </sensor>
  </gazebo>

  <gazebo reference="imu_link">
    <sensor name="imu_sensor" type="imu">
      <ignition_frame_id>imu_link</ignition_frame_id>
      <plugin filename="ignition-gazebo-imu-system" name="ignition::gazebo::systems::Imu">
      </plugin>

      <topic>imu</topic>
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <imu>
        <angular_velocity>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean> 
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </z>
        </linear_acceleration>
      </imu>
    </sensor>
  </gazebo>
  </robot>